apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "filebrowser.fullname" . }}
  labels:
    {{- include "filebrowser.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  {{- with .Values.strategy }}
  strategy:
    {{- toYaml . | nindent 4 }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "filebrowser.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
      {{- with .Values.podAnnotations }}
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "filebrowser.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "filebrowser.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      {{- with .Values.initContainers }}
      initContainers:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          volumeMounts:
            - mountPath: /.filebrowser.json
              name: config
              subPath: .filebrowser.json
            - mountPath: /db
              name: db
            - mountPath: /rootdir
              name: rootdir
              readOnly: {{ .Values.rootDir.readOnly }}
          ports:
            - name: http
              containerPort: {{ .Values.config.port }}
              protocol: TCP
          {{- with .Values.livenessProbe }}
          livenessProbe:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Values.readinessProbe }}
          readinessProbe:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      volumes:
        - name: config
          configMap:
            name: {{ include "filebrowser.fullname" . }}
        - name: db
          {{- if .Values.db.pvc.enabled }}
          persistentVolumeClaim:
            claimName: {{ .Values.db.pvc.existingClaim | default (printf "%s-%s" (include "filebrowser.fullname" .) "db" ) }}
          {{- else }}
          emptyDir: {}
          {{- end }}
        - name: rootdir
          {{- if eq .Values.rootDir.type "pvc" }}
          persistentVolumeClaim:
            claimName: {{ .Values.rootDir.pvc.existingClaim | default (printf "%s-%s" (include "filebrowser.fullname" .) "rootdir" ) }}
            readOnly: {{ .Values.rootDir.readOnly }}
          {{- else if eq .Values.rootDir.type "hostPath" }}
          hostPath:
            path: {{ .Values.rootDir.hostPath.path }}
          {{- else if eq .Values.rootDir.type "nfs" }}
          nfs:
            server: {{ .Values.rootDir.nfs.server }}
            path: {{ .Values.rootDir.nfs.path }}
          {{- else }}
          emptyDir: {}
          {{- end }}
