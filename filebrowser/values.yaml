# Default values for filebrowser.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# -- Number of replicas to run. Chart is not designed to scale horizontally, use at your own risk
replicaCount: 1

image:
  # -- Container image name
  repository: docker.io/filebrowser/filebrowser
  # -- Container image pull policy
  pullPolicy: IfNotPresent
  # -- Overrides the image tag whose default is the chart appVersion.
  tag: ""

# -- Array of imagePullSecrets in the namespace for pulling images
imagePullSecrets: []

# -- String to partially override the fullname template with a string (will prepend the release name)
nameOverride: ""

# -- String to fully override the fullname template with a string
fullnameOverride: ""

serviceAccount:
  # -- Specifies whether a service account should be created
  create: true
  # -- Annotations to add to the service account
  annotations: {}
  # -- The name of the service account to use. If not set and create is true, a name is generated using the fullname template
  name: ""

# -- Annotations of the pods
podAnnotations: {}

# -- The security context for the pods
podSecurityContext: {}
  # fsGroup: 2000

# -- The security context for the application container
securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  # -- Kubernetes Service type
  type: ClusterIP
  # -- Kubernetes Service port
  port: 80

ingress:
  # -- Enable the use of the ingress controller to access the web UI
  enabled: false
  # -- Class name of the Ingress
  className: ""
  # -- Annotations for the Ingress
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"

  # -- Hosts for the ingress
  # @default -- see [values.yaml](values.yaml)
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

# -- The resources to allocate for the container
resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

# -- Node labels for pod assignment
nodeSelector: {}

# -- Tolerations for pod assignment
tolerations: []

# -- Map of node/pod affinities
affinity: {}

rootDir:
  # -- type of rootDir mount. Valid values are [pvc, hostPath, nfs, emptyDir]
  type: pvc
  # -- Mount the root directory in read-only mode
  readOnly: false
  hostPath:
    path: /path/on/host
  nfs:
    server: ""
    path: ""
  pvc:
    # -- Existing claim for the root directory
    existingClaim: ""
    # -- Storage class name for the root directory PVC
    storageClassName: ""
    # -- Access modes for the root directory PVC
    accessModes:
      - ReadWriteOnce
    # -- Size for the root directory PVC
    size: 2Gi

db:
  pvc:
    # -- Enable persistence for database
    enabled: true
    # -- Existing claim for the database
    existingClaim: ""
    # -- Storage class name for the database PVC
    storageClassName: ""
    # -- Access modes for the database PVC
    accessModes:
      - ReadWriteOnce
    # -- Size for the database PVC
    size: 256Mi

# -- Deployment strategy to use
strategy:
  type: Recreate

# -- Liveness probe configuration
livenessProbe: {}

# -- Readiness probe configuration
# @default -- see [values.yaml](values.yaml)
readinessProbe:
  httpGet:
    path: /health
    port: http

# -- Set of initContainers for the deployment
initContainers: []

# -- File Browser application specific configuration
# @default -- see [values.yaml](values.yaml)
config:
  port: 8080
  baseURL: ""
  address: ""
  log: stdout
  database: /db/database.db
  root: /rootdir
